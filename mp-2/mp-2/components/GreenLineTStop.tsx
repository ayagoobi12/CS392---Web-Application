import styled from "styled-components";
import type { Stop } from "../interfaces/Stop";


//Styling for the encompassing div -- ensures that each one of the "cards"
//are styled properly and in a flex grid type 
const AllStopsDiv = styled.div`
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  gap: calc(16px);
  background-color: white; /* MBTA Green Line green-- this was generated by GPT for styling*/ 
  padding: calc(16px);
`;

//The single stop div ensures that it has a card type of viewing 
//Note: the hovering / font family / box shadow were generated by ChatGPT 
// They ensure for a beautiful styling when the cursor is over it 
const SingleStopDiv = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: calc(25% - 1%);
  min-width: calc(200px);
  max-width: calc(300px);

  padding: calc(8px + 0.5vw);
  margin: calc(4px + 0.3vw);

  background-color: #ffffff; 
  color: #000000;
  border: 4px solid #00843D;
  border-radius: calc(6px + 0.2vw);

  font-family: Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-size: calc(10px + 0.3vw);
  letter-spacing: 0.5px;
  text-align: center;

  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;

  &:hover {
    transform: scale(1.03);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
`;

//note the toFixed function was found online -- it converts a number, like a latitude to a string 
// i.e 42.3324234 --> "42.3324" used for rounding !! 
// also note -- the adiitional {" "} is to allow for a single space between the lattitude and longitude in the P-tag 
export default function GreenLineTStop(props: { data: Stop[] }) {
  return (
    <AllStopsDiv>
      {props.data.map((stop) => (
        <SingleStopDiv key={stop.id}>
          <h1>{stop.attributes.name}</h1>
          {stop.attributes.platform_name && (
            <p>Platform: {stop.attributes.platform_name}</p>
          )}
          <p>
            Location: {stop.attributes.latitude.toFixed(4)},{" "} 
            {stop.attributes.longitude.toFixed(4)}
          </p>
          <p>
            {stop.attributes.wheelchair_boarding === 1 //conditional check for if it is wheelchair friendly or not 
              ? "Wheelchair Accessible"
              : stop.attributes.wheelchair_boarding === 2
              ? "Not Accessible"
              : "Accessibility Unknown"}
          </p>
        </SingleStopDiv>
      ))}
    </AllStopsDiv>
  );
}
